---
#------------------------------------
# Setup options
#------------------------------------
# path to where samples.tsv is stored
samples_df: "/gscratch/pedslabs/hofflab/carsonjm/CarsonJM/phide_piper/config/samples.tsv"
# path to directory where outputs should be stored
results: "/gscratch/scrubbed/carsonjm/results/phide_piper_test/"
# path to directory where downloaded databases should be stored
resources: "/gscratch/scrubbed/carsonjm/resources/"

#------------------------------------
# Database options
#------------------------------------
# used to search for external viruses in samples
virus_db: "/gscratch/scrubbed/carsonjm/resources/uhgv/uhgv_oral_hq_combined.fna"
virus_db_meta: "/gscratch/scrubbed/carsonjm/resources/inphrared/vmr_metadata.csv"
# used to compare with validated phage genomes
reference_db: "/gscratch/scrubbed/carsonjm/resources/vmr/VMR_21-221122_MSL37.fa"
reference_meta: "/gscratch/scrubbed/carsonjm/resources/vmr/VMR_21-221122_MSL37.tsv"

#------------------------------------
# Input data options
#------------------------------------
# reads, contigs, viruses, or processed viruses
input_data: "reads"
# 1. "reads": raw, unprocessed, paired-end reads
# Modules 1 - 7 will run + annotation modules as specified
# 2. "contigs": preprocessed reads assembled into contigs
# Modules 4 - 7 will run + annotation modules as specified
# 3. "vls":  preprocessed reads, assembled into contigs, and identified as viral (virus-like sequences)
# Modules 5 - 7 will run + annotation modules as specified
# 4. "viruses":  preprocessed reads, assembled into contigs, identified as viral, quality-filtered, and dereplicated
# Only annotation modules will run as specified

#------------------------------------
# Rule customization
#------------------------------------
# General concepts:
# 1. For arguments options, simply insert additionaly arguments exactly as they would be entered on the command line
# Ex. fastp_arguments: "--disable_adapter_trimming --dedup --correction --overrepresentation_analysis"
# *Quotation marks are necessary
#
# 2. For threads, simply insert the number of threads you would like to use for a specific tool
# Ex. fastp_threads: 8
#
# 3. Some modules do not have to be run, these can be identified by looking for the include_*_module: lines
#    To run these module, make sure the True is inserted next these statements.
# Ex. include_enrichment_module: True
#

### Module 1: Read Preprocessing ###
read_preprocessing:
  # I. fastp: trimming and deduplication
  fastp_arguments: "--disable_adapter_trimming --dedup --correction --overrepresentation_analysis"
  fastp_threads: 32
  fastp_runtime: "00:10:00"
  fastp_memory: "10000"
  # II. KneadData: host read removal
  kneaddata_arguments: ""
  kneaddata_threads: 32
  kneaddata_runtime: "01:00:00"
  kneaddata_memory: "10000"

### Module 2: Viral Enrichment ###
include_enrichment_module: True
virus_enrichment:
  # I. ViromeQC: determine viral enrichment
  viromeqc_arguments: ""
  viromeqc_threads: 32
  viromeqc_runtime: "01:00:00"
  viromeqc_memory: "10000"

### Module 3: Read Assembly ###
read_assembly:
  # Possible options are "meta", "metaviral" and "rnaviral"
  assembly_modes: ["meta", "metaviral"]
  # I. SPAdes: read assembly
  spades_arguments: ""
  spades_threads: 32
  spades_runtime: "04:00:00"
  spades_memory: "100000"
  # II. QUAST: assembly statistics
  quast_arguments: "--max-ref-num 0"
  # III. Contig filtering: removing contigs below specified length
  min_contig_length: 1000

### Module 4: Virus Identification ###
virus_identification:
  # I. MASH screen against user-provided database of viral genomes: https://doi.org/10.1186/s13059-019-1841-x
  # if reads are not available, this can be set to contigs and contigs will be used to search databases for similar genomes
  external_input: "reads"
  # Roughly equates to identity (0.95 score ~= 95% identity)
  min_mash_score: 0.99
  # Roughly equates to breadth (850 hashes out of 1000 ~= 85% breadth)
  min_mash_hashes: 0
  # Roughly equates to coverage (3 multiplicity ~= 3x coverage)
  min_mash_multiplicity: 3
  mash_threads: 32
  mash_runtime: "01:00:00"
  mash_memory: "100000"
  # II. geNomad: https://doi.org/10.1093/nar/gkac1037
  genomad_min_score: 0.7
  genomad_max_fdr: 0.1
  genomad_arguments: ""
  genomad_threads: 32
  genomad_runtime: "01:00:00"
  genomad_memory: "10000"

### Module 5: Virus Quality ###
virus_quality:
  # I. CheckV: https://doi.org/10.1186/s13059-019-1841-x
  checkv_arguments: ""
  checkv_threads: 32
  checkv_runtime: "01:00:00"
  checkv_memory: "10000"
  # II. Quality filter: Filter virus like sequences based on user criteria
  # only sequences with >= specified completeness
  min_completeness: 50
  # only sequences with >= specified length
  min_length: 1000
  # only sequences with <= specified number of bacterial genes
  max_bacterial_genes: 10
  # only sequences with >= specified number of viral genes
  min_viral_genes: 0
  # Remove any viruses flagged as provirus by CheckV
  remove_proviruses: False

### Module 6: Virus Dereplication ###
virus_dereplication:
  # I. BLAST
  blast_arguments: ""
  blast_min_id: 90
  blast_max_evalue: 0.001
  # average nucleotide identity
  blast_threads: 32
  blast_runtime: "04:00:00"
  blast_memory: "50000"
  # II. Cluster (ani and coverage as decimals)
  min_ani: 0.99
  avg_ani: 0.99
  min_cov: 1.00
  leiden_resolution: 1.0
  random_seed: 1953

### Module 7: Virus Diversity ###
virus_diversity:
  # I. BLAST
  blast_arguments: ""
  blast_min_id: 90
  blast_max_evalue: 0.001
  # average nucleotide identity
  blast_threads: 8
  blast_runtime: "04:00:00"
  blast_memory: "50000"
  # II. Cluster (ani and coverage as decimals)
  min_ani: 0.95
  avg_ani: 0.95
  min_cov: 0.85
  leiden_resolution: 1.0
  random_seed: 1953
  # III. Prodigal-gv
  prodigal_gv_arguments: ""
  prodigal_gv_runtime: "04:00:00"
  prodigal_gv_memory: "50000"

### Module 8: Virus Host ###
include_host_module: True
virus_host:
  # I. iPHoP:
  iphop_split_num_seqs: 100
  # Roughly equates to precision
  iphop_min_score: 90
  iphop_arguments: ""
  iphop_threads: 32
  iphop_runtime: "04:00:00"
  iphop_memory: "100000"

### Module 9: Virus Taxonomy ###
include_taxonomy_module: True
virus_taxonomy:
  # I. geNomad:
  # Min annotated genomad genes per genome to assign taxonomy
  genomad_min_genes: 1
  # Min taxonomic agreement amongst all genomad hits
  genomad_min_agreement: 0.5
  genomad_threads: 8
  genomad_runtime: "04:00:00"
  genomad_memory: "50000"

### Module 10: Virus Lifestyle ###
include_lifestyle_module: True
virus_lifestyle:
  # minimum completeness to run lifestlye module on genome
  min_completeness: 90
  # I. BACPHLIP:
  bacphlip_arguments: ""
  # Min BACPHLIP confidence to assign lifestyle
  bacphlip_confidence: 0.9
  bacphlip_runtime: "04:00:00"
  bacphlip_memory: "50000"

### Module 11: Virus Function ###
include_function_module: False
virus_function:
  # I. VirSorter2:
  virsorter2_arguments: "--provirus-off"
  virsorter2_threads: 32
  virsorter2_runtime: "04:00:00"
  virsorter2_memory: "50000"
  # II. DRAMv:
  dramv_arguments: ""
  dramv_threads: 32
  dramv_runtime: "04:00:00"
  dramv_memory: "100000"

### Module 12: Virus Analysis ###
### To run this module, paths to reads must be included ###
include_analysis_module: True
virus_analysis:
  # I. bowtie2:
  bowtie2_arguments: ""
  bowtie2_threads: 8
  bowtie2_runtime: "04:00:00"
  bowtie2_memory: "50000"
  # II. inStrain:
  instrain_profile_arguments: ""
  min_id: 0.95
  min_breadth: 0.50
  min_depth: 3
  recover_low_abundance: True
  instrain_compare_arguments: ""
  instrain_threads: 8
  instrain_runtime: "04:00:00"
  instrain_memory: "50000"

# Module 13:
include_host_abundance_module: True
host_abundance:
  # I. metaPhlan:
  metaphlan_arguments: ""
  metaphlan_threads: 16
  metaphlan_runtime: "04:00:00"
  metaphlan_memory: "50000"

# Module 14:
include_activity_module: True
provirus_activity:
  # I. propAgate:
  propagate_arguments: ""
  min_id: 0.99
  min_breadth: 0.99
  min_depth: 3
  propagate_threads: 16
  propagate_runtime: "04:00:00"
  propagate_memory: "50000"
